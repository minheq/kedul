import { GraphQLObjectType, GraphQLSchema } from 'graphql';

import {
  AppointmentQuery,
  AppointmentsQuery,
  CreateAppointmentMutation,
  UpdateAppointmentMutation,
  CheckOutAppointmentMutation,
  CancelAppointmentMutation,
  MarkNoShowAppointmentMutation,
} from './GraphQLAppointment';
import {
  ClientQuery,
  ClientsQuery,
  CreateClientMutation,
  UpdateClientMutation,
  DeleteClientMutation,
} from './GraphQLClient';
import {
  CurrentUserQuery,
  LinkFacebookAccountMutation,
  DisconnectFacebookMutation,
  DeactivateUserMutation,
  UpdateUserEmailStartMutation,
  UpdateUserEmailVerifyMutation,
  UpdateUserPhoneStartMutation,
  UpdateUserPhoneVerifyMutation,
  UpdateUserProfileMutation,
} from './GraphQLUser';
import {
  EmployeeQuery,
  EmployeeRolesQuery,
  EmployeesQuery,
  CreateEmployeeMutation,
  UpdateEmployeeMutation,
  UpdateEmployeeRoleMutation,
  UpdateEmployeeRolePermissionsMutation,
  DeleteEmployeeMutation,
  InviteEmployeeMutation,
  DeclineEmployeeInvitationMutation,
  CancelEmployeeInvitationMutation,
  AcceptEmployeeInvitationMutation,
  UnlinkEmployeeMutation,
} from './GraphQLEmployee';
import { ImageQuery } from './GraphQLImage';
import {
  InvoiceQuery,
  CreateInvoiceMutation,
  VoidInvoiceMutation,
  RefundInvoiceMutation,
} from './GraphQLInvoice';
import {
  ServiceQuery,
  ServiceCategoryQuery,
  CreateServiceMutation,
  UpdateServiceMutation,
  DeleteServiceMutation,
  CreateServiceCategoryMutation,
  UpdateServiceCategoryMutation,
  DeleteServiceCategoryMutation,
} from './GraphQLService';
import {
  ShiftQuery,
  ShiftsQuery,
  CreateShiftMutation,
  UpdateShiftMutation,
  CancelShiftMutation,
} from './GraphQLShift';
import {
  LogInFacebookMutation,
  LogInGoogleMutation,
  LogInPhoneStartMutation,
  LogInPhoneVerifyMutation,
  LogInEmailStartMutation,
  LogInEmailVerifyMutation,
  LogInSilentMutation,
  LinkGoogleAccountMutation,
  DisconnectGoogleMutation,
} from './GraphQLAuth';
import {
  CreateBusinessMutation,
  UpdateBusinessMutation,
  DeleteBusinessMutation,
  CurrentBusinessQuery,
} from './GraphQLBusiness';
import {
  CreateLocationMutation,
  UpdateLocationMutation,
  DeleteLocationMutation,
  LocationQuery,
  LocationsQuery,
} from './GraphQLLocation';

const Query = new GraphQLObjectType<any, any, any>({
  name: 'Query',
  fields: () => ({
    appointment: AppointmentQuery,
    appointments: AppointmentsQuery,
    client: ClientQuery,
    clients: ClientsQuery,
    currentBusiness: CurrentBusinessQuery,
    currentUser: CurrentUserQuery,
    employee: EmployeeQuery,
    employeeRoles: EmployeeRolesQuery,
    employees: EmployeesQuery,
    image: ImageQuery,
    invoice: InvoiceQuery,
    location: LocationQuery,
    locations: LocationsQuery,
    service: ServiceQuery,
    serviceCategory: ServiceCategoryQuery,
    shift: ShiftQuery,
    shifts: ShiftsQuery,
  }),
});

const Mutation = new GraphQLObjectType({
  name: 'Mutation',
  fields: () => ({
    logInFacebook: LogInFacebookMutation,
    logInGoogle: LogInGoogleMutation,
    logInPhoneStart: LogInPhoneStartMutation,
    logInPhoneVerify: LogInPhoneVerifyMutation,
    logInEmailStart: LogInEmailStartMutation,
    logInEmailVerify: LogInEmailVerifyMutation,
    logInSilent: LogInSilentMutation,
    linkFacebookAccount: LinkFacebookAccountMutation,
    disconnectFacebook: DisconnectFacebookMutation,
    linkGoogleAccount: LinkGoogleAccountMutation,
    disconnectGoogle: DisconnectGoogleMutation,
    deactivateUser: DeactivateUserMutation,
    updateUserEmailStart: UpdateUserEmailStartMutation,
    updateUserEmailVerify: UpdateUserEmailVerifyMutation,
    updateUserPhoneStart: UpdateUserPhoneStartMutation,
    updateUserPhoneVerify: UpdateUserPhoneVerifyMutation,
    updateUserProfile: UpdateUserProfileMutation,
    createEmployee: CreateEmployeeMutation,
    updateEmployee: UpdateEmployeeMutation,
    updateEmployeeRole: UpdateEmployeeRoleMutation,
    updateEmployeeRolePermissions: UpdateEmployeeRolePermissionsMutation,
    deleteEmployee: DeleteEmployeeMutation,
    inviteEmployee: InviteEmployeeMutation,
    declineEmployeeInvitation: DeclineEmployeeInvitationMutation,
    cancelEmployeeInvitation: CancelEmployeeInvitationMutation,
    acceptEmployeeInvitation: AcceptEmployeeInvitationMutation,
    unlinkEmployee: UnlinkEmployeeMutation,
    createShift: CreateShiftMutation,
    updateShift: UpdateShiftMutation,
    cancelShift: CancelShiftMutation,
    createBusiness: CreateBusinessMutation,
    updateBusiness: UpdateBusinessMutation,
    deleteBusiness: DeleteBusinessMutation,
    createLocation: CreateLocationMutation,
    updateLocation: UpdateLocationMutation,
    deleteLocation: DeleteLocationMutation,
    createClient: CreateClientMutation,
    updateClient: UpdateClientMutation,
    deleteClient: DeleteClientMutation,
    createInvoice: CreateInvoiceMutation,
    voidInvoice: VoidInvoiceMutation,
    refundInvoice: RefundInvoiceMutation,
    createService: CreateServiceMutation,
    updateService: UpdateServiceMutation,
    deleteService: DeleteServiceMutation,
    createServiceCategory: CreateServiceCategoryMutation,
    updateServiceCategory: UpdateServiceCategoryMutation,
    deleteServiceCategory: DeleteServiceCategoryMutation,
    createAppointment: CreateAppointmentMutation,
    updateAppointment: UpdateAppointmentMutation,
    checkOutAppointment: CheckOutAppointmentMutation,
    cancelAppointment: CancelAppointmentMutation,
    markNoShowAppointment: MarkNoShowAppointmentMutation,
  }),
});

export const schema = new GraphQLSchema({
  query: Query,
  mutation: Mutation,
});
